import { useEffect, useRef, useState } from "react";
import Head from "next/head";
import Image from "next/image";
// style
import styles from "../styles/Home.module.scss";
// mock
import { data } from "../mock/data.js";
import { groupList } from "../mock/groupList.js";
import { options } from "../mock/dropdownOptions.js";
// components
import CardList from "@/components/cardList";
import Itinerary from "@/components/itinerary";
import DropdownSelect from "@/components/dropdown";
import GroupShow from "@/components/groupShow";
// logo and images
import logoIcon from "../../public/assets/images/logo.svg";
import bannerImage from "../../public/assets/images/banner.jpeg";
import Hero from "@/components/hero";
import Banner from "@/components/banner";

export default function Home() {
  const portList = useRef([]);
  const [inputDropdownValue, setInputDropdownValue] = useState({ label: "Mostra tutti" });
  const [dataFiltered, setDataFiltered] = useState([]);
  const [selectedLeft, setSelectedLeft] = useState("");
  const [selectedRight, setSelectedRight] = useState("");

  // tutti i porti di partenza
  useEffect(() => {
    data.map((tour) => {
      if (!portList.current.some((item) => item.Port === tour.departure.Port))
        portList.current.push(tour.departure);
    });
  }, []);

  useEffect(() => {
    if (inputDropdownValue.label === "Mostra tutti") {
      setDataFiltered(data);
    } else if (
      inputDropdownValue.label !== "Mostra per porto di partenza" &&
      inputDropdownValue.label !== "Seleziona un porto"
    ) {
      setDataFiltered(
        data.filter((item) => item.departure.Port.includes(inputDropdownValue.label))
      );
    }
  }, [inputDropdownValue.value]);

  return (
    <>
      <Head>
        <title>Sea Adventures</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <div className={styles.header__logo}>
          <Image src={logoIcon} width={40} height={40} alt="logo" />
        </div>
      </header>
      <main className={styles.main}>
        <Hero />
        <section className={styles.content}>
          <div className={styles.container}>
            <DropdownSelect
              options={groupList}
              handleChange={setInputDropdownValue}
              setOtherSelected={setSelectedRight}
              selected={selectedLeft}
              setSelected={setSelectedLeft}
            />
            <DropdownSelect
              options={options}
              handleChange={setInputDropdownValue}
              setOtherSelected={setSelectedLeft}
              selected={selectedRight}
              setSelected={setSelectedRight}
            />
          </div>
          {inputDropdownValue.label === "Mostra per porto di partenza" ? (
            <GroupShow props={{ data, portList }} />
          ) : (
            <CardList data={dataFiltered} />
          )}
        </section>
        <Banner />
        <section className={styles.itinerary}>
          <Itinerary data={data} />
        </section>
      </main>
    </>
  );
}
