import { useEffect, useRef, useState } from "react";
import Head from "next/head";
import Image from "next/image";
// style
import styles from "../styles/Home.module.scss";
// import { data } from "../mock/data.js";
import { dropdownGroup } from "../mock/dropdownGroup.js";
import { dropdownPortList } from "../mock/dropdownPortList.js";
// components
import CardList from "@/components/cardList";
import Itinerary from "@/components/itinerary";
import DropdownSelect from "@/components/dropdown";
import GroupShow from "@/components/groupShow";
// logo and images
import logoIcon from "../../public/assets/images/logo.svg";
import Hero from "@/components/hero";
import Banner from "@/components/banner";
export const API_BASE_URL = "https://api.npoint.io/fb404a223a346cab07ec";

export default function Home({ data }) {
  const [inputDropdownValue, setInputDropdownValue] = useState({ label: "Mostra tutti" });
  const [dataFiltered, setDataFiltered] = useState([]);
  // array per gestire l'apertura e la chiusura di n dropdown
  const [dropdownList, setDropdownList] = useState([
    { id: 0, label: "groupList", isOpen: false, selectedOption: "" },
    { id: 1, label: "portList", isOpen: false, selectedOption: "" },
  ]);
  const portList = useRef([]);
  const isButtonVisible = useRef(true);

  // crea un array con tutti i porti di partenza
  useEffect(() => {
    data.map((tour) => {
      if (!portList.current.some((item) => item.Port === tour.departure.Port))
        portList.current.push(tour.departure);
    });
  }, []);

  useEffect(() => {
    if (inputDropdownValue.label === "Mostra tutti") {
      setDataFiltered(data);
      isButtonVisible.current = true;
    } else if (
      inputDropdownValue.label !== "Mostra per porto di partenza" &&
      inputDropdownValue.label !== "Seleziona un porto"
    ) {
      setDataFiltered(
        data.filter((item) => item.departure.Port.includes(inputDropdownValue.label))
      );
      isButtonVisible.current = false;
    }
  }, [inputDropdownValue.value]);

  return (
    <>
      <Head>
        <title>Sea Adventures</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="author" content="Mirko Montaina" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <div className={styles.header__logo}>
          <Image src={logoIcon} width={40} height={40} alt="logo" />
        </div>
      </header>
      <main className={styles.main}>
        <Hero />
        <section className={styles.content}>
          <div className={styles.container}>
            <DropdownSelect
              options={dropdownGroup}
              handleChange={setInputDropdownValue}
              dropdown={dropdownList[0]}
              dropdownList={dropdownList}
              setDropdownList={setDropdownList}
            />
            <DropdownSelect
              options={dropdownPortList}
              handleChange={setInputDropdownValue}
              dropdown={dropdownList[1]}
              dropdownList={dropdownList}
              setDropdownList={setDropdownList}
            />
          </div>
          {inputDropdownValue.label === "Mostra per porto di partenza" ? (
            <GroupShow props={{ data, portList }} />
          ) : (
            <CardList data={dataFiltered} isButtonVisible={isButtonVisible.current} />
          )}
        </section>
        <Banner />
        <section className={styles.itinerary}>
          <Itinerary data={data} />
        </section>
      </main>
    </>
  );
}

/* SERVER SIDE RENDERING */
export async function getServerSideProps() {
  const res = await fetch(API_BASE_URL);
  const data = await res.json();

  return {
    props: { data },
  };
}
